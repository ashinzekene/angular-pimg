{"version":3,"file":"angular-pimg.js.map","sources":["ng://angular-pimg/lib/angular-pimg.service.ts","ng://angular-pimg/lib/angular-pimg.component.ts","ng://angular-pimg/lib/angular-pimg.module.ts"],"sourcesContent":["import { Injectable, Optional, Inject } from '@angular/core';\nimport { AngularPimgOptions } from './config-options';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularPimgService {\n  private _className: string;\n  private _placeholderClassName = 'pimg__placeholder';\n  private _fetchOnDemand = false;\n  private _dataSaver: boolean;\n  private _buttonClassName = 'pimg_btn';\n  private _wrapperClassName = 'pimg_wrapper';\n\n  constructor(@Optional() @Inject('Options') options: AngularPimgOptions) {\n    if (options) {\n      this.setConfig(options);\n    }\n  }\n\n  get wrapperClassName(): string {\n    return this._wrapperClassName;\n  }\n\n  get buttonClassName(): string {\n    return this._buttonClassName;\n  }\n\n  get className(): string {\n    return this._className;\n  }\n\n  get placeholderClassName(): string {\n    return this._placeholderClassName;\n  }\n\n  get dataSaver(): boolean {\n    return this._dataSaver;\n  }\n\n  get fetchOnDemand(): boolean {\n    return this._fetchOnDemand;\n  }\n\n  setConfig({ className, dataSaver, fetchOnDemand, placeholderClassName }: Partial<AngularPimgOptions>) {\n    this._className = typeof className !== 'undefined' ? className : this.className;\n    this._fetchOnDemand = typeof fetchOnDemand !== 'undefined' ? fetchOnDemand : this.fetchOnDemand;\n    this._placeholderClassName = typeof placeholderClassName !== 'undefined' ? placeholderClassName : this.placeholderClassName;\n    if (typeof dataSaver === 'undefined') {\n      return;\n    }\n    if (typeof dataSaver === 'object') {\n      this._buttonClassName = dataSaver.buttonClassName;\n      this._wrapperClassName = dataSaver.wrapperClassName;\n    } else {\n      this._dataSaver = true; // dataSaver is true\n    }\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, SimpleChanges, OnChanges, ElementRef } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { AngularPimgService } from './angular-pimg.service';\nimport { AngularPimgOptions } from './config-options';\n\n@Component({\n  selector: 'angular-pimg',\n  template: `<div [ngClass]=\"wrapperClassName\" *ngIf=\"(dataSaver && loading) || delayed; else loadingContent\">\n  <img [ngClass]=\"classes\" [ngStyle]=\"style\" [src]=\"placeholder\" />\n  <button [ngClass]=\"buttonClassName\" (click)=\"fetchImage()\">\n    Load image\n  </button>\n</div>\n<ng-template #loadingContent>\n  <img *ngIf=\"loading; else otherContent\" [ngClass]=\"placeholderClassName\" [ngStyle]=\"style\" [src]=\"placeholder\" />\n  <ng-template #otherContent>\n    <img [ngStyle]=\"style\" [ngClass]=\"classes\" [src]=\"blob\" />\n  </ng-template>\n</ng-template>`,\n  styles: []\n})\nexport class AngularPimgComponent implements OnChanges {\n  @Input() dataSaver: any;\n  @Input() src: string;\n  @Input() fetchOnDemand: boolean;\n  @Input() placeholder: string;\n  @Input() placeholderClassName: string;\n  @Input() className: string;\n  @Input() style: any = { display: 'block' };\n  @Output() fetched: EventEmitter<null> = new EventEmitter();\n  @Output() error: EventEmitter<any> = new EventEmitter();\n  wrapperClassName = '';\n  buttonClassName = '';\n  blob: SafeUrl = '';\n  delayed: boolean;\n  loading: boolean;\n  classes: string;\n  private isIntersecting = false;\n\n  constructor(private el: ElementRef, private domSanitizer: DomSanitizer, private options: AngularPimgService) {\n    this.insertInput();\n    this.setUp();\n  }\n\n  setFetchOnDemand() {\n    const observer = new IntersectionObserver(entries => {\n      const image = entries[0];\n      if (image.isIntersecting && !this.isIntersecting) {\n        this.fetchImage();\n        this.isIntersecting = true;\n        console.log('Called by intersection API');\n        this.delayed = false;\n        observer.disconnect();\n      }\n    });\n    observer.observe(this.el.nativeElement);\n  }\n\n  fetchImage() {\n    fetch(this.src)\n      .then(res => res.blob())\n      .then(res => {\n        console.log(res);\n        this.blob = this.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(res));\n        this.loading = false;\n        this.isIntersecting = false;\n        this.delayed = false;\n        this.fetched.emit();\n      })\n      .catch(err => {\n        this.error.emit(err);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const newValues: any = {};\n    const props = ['src', 'fetchOnDemand', 'placeholder', 'placeholderClassName', 'className', 'style'];\n    for (const prop in changes) {\n      if (props.findIndex(val => val === prop) > 0 && !this.isUndefined(changes[prop].currentValue)) {\n        console.log(`${prop} is not undefined. It has changed`);\n        this[prop] = changes[prop].currentValue;\n      } else {\n        if (prop === 'dataSaver' && this.isObject(changes[prop])) {\n          this.buttonClassName = changes[prop].currentValue.buttonClassName;\n          this.placeholderClassName = changes[prop].currentValue.placeholderClassName;\n        }\n      }\n    }\n    this.setUp();\n    // changes.dataSaver ? newValues.dataSaver = changes.dataSaver.currentValue : null;\n    // changes.src ? newValues.src = changes.src.currentValue : null;\n    // changes.fetchOnDemand ? newValues.fetchOnDemand = changes.fetchOnDemand.currentValue : null;\n    // changes.placeholder ? newValues.placeholder = changes.placeholder.currentValue : null;\n    // changes.placeholderClassName ? newValues.placeholderClassName = changes.placeholderClassName.currentValue : null;\n    // changes.class ? newValues.class = changes.class.currentValue : null;\n    // changes.style ? newValues.style = changes.style.currentValue : null;\n  }\n\n  insertInput() {\n    // Called on initialization; Set the default configuration options if option is not present\n    console.log('Config options', this.options);\n    if (this.isUndefined(this.fetchOnDemand)) {\n      this.fetchOnDemand = this.options.fetchOnDemand;\n    }\n    if (this.isUndefined(this.placeholderClassName)) {\n      this.placeholderClassName = this.options.placeholderClassName;\n    }\n    if (this.isUndefined(this.dataSaver)) {\n      this.dataSaver = this.options.dataSaver;\n    }\n    if (this.isUndefined(this.className)) {\n      this.className = this.options.className;\n    }\n    if (this.isObject(this.dataSaver)) {\n      // set buttonClassName and wrapperClassName\n      this.buttonClassName = this.dataSaver.buttonClassName;\n      this.wrapperClassName = this.dataSaver.wrapperClassName;\n    } else {\n      this.buttonClassName = this.options.buttonClassName;\n      this.wrapperClassName = this.options.wrapperClassName;\n    }\n  }\n\n  setUp() {\n    if (this.dataSaver) {\n      this.delayed = true;\n    } else if (this.fetchOnDemand) {\n      this.loading = true;\n      this.setFetchOnDemand();\n    } else {\n      this.fetchImage();\n      console.log('Fetching image, due to config', this.dataSaver);\n    }\n    if (this.src && this.src.includes('cloudinary')) {\n      this.placeholder =\n        this.placeholder || this.src.replace('/upload/', '/upload/c_thumb,w_30/');\n    }\n    this.classes = `${this.className} ${this.placeholderClassName}`;\n  }\n\n  isObject = x => typeof x === 'object';\n  isUndefined = x => typeof x === 'undefined';\n\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { AngularPimgComponent } from './angular-pimg.component';\nimport { AngularPimgService } from './angular-pimg.service';\nimport { AngularPimgOptions } from './config-options';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AngularPimgComponent],\n  exports: [AngularPimgComponent]\n})\nexport class AngularPimgModule {\n  constructor(@Optional() @SkipSelf() parentModule: AngularPimgModule) {\n    if (parentModule) {\n      throw new Error('The Angular Pimg Module is already loaded. Import it only in your AppModule');\n    }\n  }\n  static forRoot(options?: Partial<AngularPimgOptions>): ModuleWithProviders {\n    return {\n      ngModule: AngularPimgModule,\n      providers: [\n        AngularPimgService,\n        { provide: 'Options', useValue: options }\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
