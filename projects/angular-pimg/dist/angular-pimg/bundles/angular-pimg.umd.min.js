!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/platform-browser"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-pimg",["exports","@angular/core","@angular/platform-browser","@angular/common"],t):t(e["angular-pimg"]={},e.ng.core,e.ng.platformBrowser,e.ng.common)}(this,function(e,a,t,n){"use strict";var s=function(){function e(e){this._placeholderClassName="pimg__placeholder",this._fetchOnDemand=!1,this._buttonClassName="pimg_btn",this._wrapperClassName="pimg_wrapper",e&&this.setConfig(e)}return Object.defineProperty(e.prototype,"wrapperClassName",{get:function(){return this._wrapperClassName},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"buttonClassName",{get:function(){return this._buttonClassName},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"className",{get:function(){return this._className},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"placeholderClassName",{get:function(){return this._placeholderClassName},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dataSaver",{get:function(){return this._dataSaver},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fetchOnDemand",{get:function(){return this._fetchOnDemand},enumerable:!0,configurable:!0}),e.prototype.setConfig=function(e){var t=e.className,n=e.dataSaver,a=e.fetchOnDemand,s=e.placeholderClassName;this._className=void 0!==t?t:this.className,this._fetchOnDemand=void 0!==a?a:this.fetchOnDemand,this._placeholderClassName=void 0!==s?s:this.placeholderClassName,void 0!==n&&("object"==typeof n?(this._buttonClassName=n.buttonClassName,this._wrapperClassName=n.wrapperClassName):this._dataSaver=!0)},e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:a.Optional},{type:a.Inject,args:["Options"]}]}]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e(a.inject("Options",8))},token:e,providedIn:"root"}),e}(),r=function(){function e(e,t,n){this.el=e,this.domSanitizer=t,this.options=n,this.style={display:"block"},this.fetched=new a.EventEmitter,this.error=new a.EventEmitter,this.wrapperClassName="",this.buttonClassName="",this.blob="",this.isIntersecting=!1,this.isObject=function(e){return"object"==typeof e},this.isUndefined=function(e){return void 0===e},this.insertInput(),this.setUp()}return e.prototype.setFetchOnDemand=function(){var t=this,n=new IntersectionObserver(function(e){e[0].isIntersecting&&!t.isIntersecting&&(t.fetchImage(),t.isIntersecting=!0,console.log("Called by intersection API"),t.delayed=!1,n.disconnect())});n.observe(this.el.nativeElement)},e.prototype.fetchImage=function(){var t=this;fetch(this.src).then(function(e){return e.blob()}).then(function(e){console.log(e),t.blob=t.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(e)),t.loading=!1,t.isIntersecting=!1,t.delayed=!1,t.fetched.emit()})["catch"](function(e){t.error.emit(e)})},e.prototype.ngOnChanges=function(e){var n=["src","fetchOnDemand","placeholder","placeholderClassName","className","style"],t=function(t){0<n.findIndex(function(e){return e===t})&&!a.isUndefined(e[t].currentValue)?(console.log(t+" is not undefined. It has changed"),a[t]=e[t].currentValue):"dataSaver"===t&&a.isObject(e[t])&&(a.buttonClassName=e[t].currentValue.buttonClassName,a.placeholderClassName=e[t].currentValue.placeholderClassName)},a=this;for(var s in e)t(s);this.setUp()},e.prototype.insertInput=function(){console.log("Config options",this.options),this.isUndefined(this.fetchOnDemand)&&(this.fetchOnDemand=this.options.fetchOnDemand),this.isUndefined(this.placeholderClassName)&&(this.placeholderClassName=this.options.placeholderClassName),this.isUndefined(this.dataSaver)&&(this.dataSaver=this.options.dataSaver),this.isUndefined(this.className)&&(this.className=this.options.className),this.isObject(this.dataSaver)?(this.buttonClassName=this.dataSaver.buttonClassName,this.wrapperClassName=this.dataSaver.wrapperClassName):(this.buttonClassName=this.options.buttonClassName,this.wrapperClassName=this.options.wrapperClassName)},e.prototype.setUp=function(){this.dataSaver?this.delayed=!0:this.fetchOnDemand?(this.loading=!0,this.setFetchOnDemand()):(this.fetchImage(),console.log("Fetching image, due to config",this.dataSaver)),this.src&&this.src.includes("cloudinary")&&(this.placeholder=this.placeholder||this.src.replace("/upload/","/upload/c_thumb,w_30/")),this.classes=this.className+" "+this.placeholderClassName},e.decorators=[{type:a.Component,args:[{selector:"angular-pimg",template:'<div [ngClass]="wrapperClassName" *ngIf="(dataSaver && loading) || delayed; else loadingContent">\n  <img [ngClass]="classes" [ngStyle]="style" [src]="placeholder" />\n  <button [ngClass]="buttonClassName" (click)="fetchImage()">\n    Load image\n  </button>\n</div>\n<ng-template #loadingContent>\n  <img *ngIf="loading; else otherContent" [ngClass]="placeholderClassName" [ngStyle]="style" [src]="placeholder" />\n  <ng-template #otherContent>\n    <img [ngStyle]="style" [ngClass]="classes" [src]="blob" />\n  </ng-template>\n</ng-template>',styles:[]}]}],e.ctorParameters=function(){return[{type:a.ElementRef},{type:t.DomSanitizer},{type:s}]},e.propDecorators={dataSaver:[{type:a.Input}],src:[{type:a.Input}],fetchOnDemand:[{type:a.Input}],placeholder:[{type:a.Input}],placeholderClassName:[{type:a.Input}],className:[{type:a.Input}],style:[{type:a.Input}],fetched:[{type:a.Output}],error:[{type:a.Output}]},e}(),o=function(){function t(e){if(e)throw new Error("The Angular Pimg Module is already loaded. Import it only in your AppModule")}return t.forRoot=function(e){return{ngModule:t,providers:[s,{provide:"Options",useValue:e}]}},t.decorators=[{type:a.NgModule,args:[{imports:[n.CommonModule],declarations:[r],exports:[r]}]}],t.ctorParameters=function(){return[{type:t,decorators:[{type:a.Optional},{type:a.SkipSelf}]}]},t}();e.AngularPimgService=s,e.AngularPimgComponent=r,e.AngularPimgModule=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-pimg.umd.min.js.map